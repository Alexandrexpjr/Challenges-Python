# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

def get_n_pentagonals(max_size):
  n = 1
  pentagonals = []
  while(len(pentagonals) < max_size):
    Pn = n*(3*n - 1) / 2
    pentagonals.append(Pn)
    n += 1
  return pentagonals

def get_pentagonal_pair(max_size):
  pentagonals = get_n_pentagonals(max_size)
  Ds = []
  for Pk in pentagonals:
    for Pj in pentagonals:
      sum = Pk + Pj
      diff = abs(Pk - Pj)
      if (sum in pentagonals and diff in pentagonals):
        Ds.append(diff)
  return min(Ds)

print(get_pentagonal_pair(3000)) # 5482660

# Correct